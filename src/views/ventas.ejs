<%- include('./templates/header'); -%>
<!-- 
Autor Jesus pineda / "Otro autor"
14/08/2020
Proposito de esta pagina: Esta es la pagina de productos 
aqui se gestionanran los diferente produstos 
-->
<!-- Aqui Agregar el contenido para las paginas del sistemas  -->

<!-- Modal -->
<div class="modal " id="modalOrden" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle"
    aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content ">
            <div class="modal-header bg-white">
                <h5 class="modal-title" style="width: 100%;text-align: center;font-size: 25px;"
                    id="exampleModalLongTitle">TIPO DE ORDEN</h5>
            </div>
            <div class="modal-body ">
                <div class="row ">
                    <div class=" col-md-6  orden-option card-center-vh ">
                        <span onclick="selecTable();" class="bg-primary card-center-vh btn-new-orden-mesa "> MESA
                        </span>
                    </div>
                    <div class="col-md-6  orden-option card-center-vh">
                        <span class="bg-primary card-center-vh btn-new-orden-mesa"> LLEVAR </span>
                    </div>
                </div>
            </div>
            <hr>
        </div>
    </div>
</div>
<div class="modal " id="modalTables" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle"
    aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content ">
            <div class="modal-header bg-white">
                <h5 class="modal-title" style="width: 100%;text-align: center;font-size: 25px;"
                    id="exampleModalLongTitle">MESAS DISPONIBLES
                </h5>
            </div>
            <div class="modal-body ">
                <div id="selectTable" style="padding: 25px;" class="row card-center-vh">


                </div>
                <hr>
            </div>

        </div>
    </div>
</div>
<div class="without-margen row orden-detail-content ">

    <div class="without-margen main-pending-orders">

        <div id="orden-tables" class="without-margen row list-tables">

        </div>

    </div>

    <div class="list-products-orden">

        <table class="borderless table text-white text-center ">
            <thead>
                <tr>
                    <th scope="col">IMAGEN</th>
                    <th scope="col">DESCRIPCION</th>
                    <th scope="col">CANTIDAD</th>
                    <th scope="col">TOTAL</th>
                    <th scope="col">BORRAR</th>
                </tr>
            </thead>
            <tbody id="container-table-producto">

            </tbody>
        </table>

    </div>

    <div class="totals row without-margen card-center-vh bg-info">
        <div class="col-md-6 ">

            <table class="borderless  table text-white">
                <tbody>
                    <tr>
                        <th>
                            Sub total
                        </th>
                        <td class="text-left">
                            <strong style="font-size: 22px!important;" id="totalapagar">
                                $0
                            </strong>
                        </td>
                    </tr>
                    <tr>
                        <th>
                            <span style="cursor: pointer;" >Descuento <i class="far fa-edit"></i> </span> 
                        </th>
                        <td class="text-left">
                            0%
                        </td>
                    </tr>
                    <tr>
                        <th>
                            Total a pagar
                        </th>
                        <td class=" text-left ">
                            <strong style="font-size: 22px!important;">
                                $0
                            </strong>
                        </td>

                    </tr>
                </tbody>
            </table>
        </div>
        <div class="col-md-6">

            <table class="borderless  table text-white">
                <tbody>
                    <tr>
                        <th>
                            <div class="btn btn-primary  form-control">
                                COBRAR
                            </div>
                        </th>

                    </tr>
                    <tr>
                        <th>
                            <div class="btn btn-success  form-control">
                                FACTURAR
                            </div>
                        </th>
                    </tr>
                    <tr>
                        <th>
                            <div class="btn btn-danger  form-control">
                                CANCELAR
                            </div>
                        </th>

                    </tr>
                </tbody>
            </table>

        </div>
    </div>

</div>
<div class="main-div-product without-margen">

    <div class="content-products">
        <div style="position: static;" class="row  without-margen">
            <div onclick="allProducts();" class="type-products col-md-4 card-center-vh bg-info text-white">TODOS
            </div>
            <div onclick="productsByCategory();" class="type-products col-md-4 card-center-vh bg-warning text-white">
                CATEGORIAS</div>
            <div class=" type-products col-md-4 card-center-vh bg-danger text-white">COMBOS</div>

        </div>
        <div class="container w-75">
            <div class="input-group form-group">
                <div class="input-group-prepend">
                    <span class="input-group-text bg-primary text-white" id="basic-addon1"><i
                            class="fas fa-search"></i></span>
                </div>
                <input style="border: 0;" onkeyup="searchByname()" type="text" class="form-control" id="searchByNames"
                    placeholder="Buscar producto" aria-label="buscar" aria-describedby="basic-addon1">
            </div>
        </div>
        <div id="container-productos" class="without-margen text-white row text-center justify-content-center">

        </div>
        <div id="container-list-product" class=" without-margen row container-list-product justify-content-center">

        </div>
    </div>
</div>
</div>

<div onclick="newOrden();" data-toggle="tooltip" data-placement="left" title="NUEVA ORDEN"
    class="btn-new-orden bg-primary">
    <i class="fas fa-plus"></i>
</div>

<%- include('./templates/scripts.ejs'); -%>

<script>
    const newOrden = () => $("#modalOrden").modal("show");

    $(document).ready(() => {
        allProducts();
        getTableOrden();
    });
    let listProductsInOrden = null;

    const drawTable = async (id_orden) => {
        let response = await new GetInfoByFetch(`${links.urlOrdenDet}ordendetbyproducto/${id_orden}`).request();
        let content = document.getElementById("container-table-producto");
        let totalapagarcontent = document.getElementById("totalapagar");
        let totalApagar = 0;

        content.innerHTML = " ";
        totalapagarcontent.innerHTML = " ";

        response.forEach(productos => {

            totalApagar += productos.producto.precio * productos.unidades;

            let detalleOrden = `<tr>
                            <td ><img src="../../image/${productos.producto.imagen}" width="50px" alt="" srcset=""> </td>
                            <td>${productos.producto.producto} - $${productos.producto.precio}</td>
                            <td>
                              <div onClick='remove(${productos.ordendetId},${productos.unidades})' class="btn btn-danger btn-sm float-left">-</div>
                              <span> ${productos.unidades} </span>
                              <div onClick='add(${productos.ordendetId},${productos.unidades})' class="btn btn-primary btn-sm float-right">+</div>
                            </td>
                            <td>
                              <strong>$${productos.producto.precio * productos.unidades}</strong>
                            </td>
                            <td><i onClick='deleteDatail(${productos.ordendetId})' class="fas fa-trash text-danger cursor"></i></td>
                          </tr>`;
            content.insertAdjacentHTML('beforeEnd', detalleOrden);
        });

        totalapagarcontent.innerHTML = `$${totalApagar}`;
        return listProductsInOrden = response;
    }
    const deleteDatail = async (detalleId) => {
        const response = await new GetInfoByFetch(
            `${links.urlOrdenDet}${detalleId}`,
            'DELETE')
            .request();

        drawTable(ordenId);
    }
    const remove = async (detalleId, unidadesActuales) => {
        if (unidadesActuales > 1) {
            const response = await new GetInfoByFetch(
                `${links.urlOrdenDet}${detalleId}`,
                'PUT',
                new URLSearchParams({
                    'unidades': unidadesActuales - 1,
                })
            ).request();
            drawTable(ordenId);
        }

    }
    const add = async (detalleId, unidadesActuales) => {
        const response = await new GetInfoByFetch(
            `${links.urlOrdenDet}${detalleId}`,
            'PUT',
            new URLSearchParams({
                'unidades': unidadesActuales + 1,
            })
        ).request();
        drawTable(ordenId);
    }

    let beforElement = null; // Este elemento se actualiza con el elemento HTML seleccionado  
    // para validar cual fue la ultima selecionada para que se pinte en pantalla 
    // estp es pa poder quitar la clase selected-table del ultimo y agregarla a uno nuevo

    let ordenId = 0; //Ninguna mesa a sido seleccionado 

    const detailOrden = async (id_orden) => {

        let element = event.currentTarget; // Elemento HTML actulamento seleccionado
        ordenId = id_orden; //La mesa seleccionada se guarda ena variable global

        if (ordenId != 0) {
            drawTable(id_orden); // Se pinta la tabla en pantalla 
        }


        if (beforElement === null) {
            element.classList.add("selected-table");
            return beforElement = element;

        } else {
            beforElement.classList.remove("selected-table");
            element.classList.add("selected-table");
            return beforElement = element;
        }
    }

    const saveProductToOrden = async (productoId) => {

        if (parseInt(ordenId) === 0) {
            return console.log("Seleccione una orden para agrehar producto");
        }
        const resultado = listProductsInOrden.find(producto => producto.productoId === productoId);
        if (typeof resultado == 'undefined') {
            const response = await new GetInfoByFetch(
                `${links.urlOrdenDet}`,
                'POST',
                new URLSearchParams({
                    'ordenId': ordenId,
                    'productoId': productoId,
                    'unidades': 1,
                })
            ).request();
        } else {
            const response = await new GetInfoByFetch(
                `${links.urlOrdenDet}${resultado.ordendetId}`,
                'PUT',
                new URLSearchParams({
                    'unidades': resultado.unidades + 1,
                })
            ).request()
        }

        drawTable(ordenId);
    }
    const searchByname = () => {
        const inputSearch = document.getElementById("searchByNames");
        filterItems(inputSearch.value)
    }
    const addToOrdenPending = async (id, estado) => {
        let response = await new GetInfoByFetch(`${links.urlOrden}/newOrden/${id}`, 'PUT', new URLSearchParams({
            'estado': estado
        })).request();
        if (response.success) {
            $("#modalTables").modal("hide");
            getTableOrden();
        }
    }
    const getTableOrden = async () => {

        let response = await new GetInfoByFetch(`${links.urlOrden}ordenbymesa`).request();
        let content = document.getElementById('orden-tables');
        content.innerHTML = " ";
        content.innerHTML =
            `<div class="pending-orders bg-info text-white">
            Para llevar
          </div>`;

        response.map((tables) => {
            let table = `
                <div onclick="detailOrden(${tables.ordenId});" class="pending-orders text-white">
                ${tables.mesa.num_mesa}
                </div>
            `;
            content.insertAdjacentHTML('beforeEnd', table);
        });

    };
    const selecTable = async () => {
        $("#modalOrden").modal("hide");
        $("#modalTables").modal("show");
        let response = await new GetInfoByFetch(`${links.urlMesas}0`).request();
        let content = document.getElementById('selectTable');
        content.innerHTML = " ";

        response.map((tables) => {
            let table = `
      <div onclick="addToOrdenPending(${tables.mesaId},${tables.estado});"  class="select-table col-sm-2 bg-primary border text-white">
        ${tables.num_mesa}
          </div>
            `;

            content.insertAdjacentHTML('beforeEnd', table);
        });

    }

    let listProducts = null;
    const filterItems = query => {
        const content = document.getElementById('container-productos');
        content.innerHTML = " ";
        document.getElementById('container-list-product').innerHTML = " ";

        return listProducts.filter((item) =>
            item.producto.toLowerCase().indexOf(query.toLowerCase()) > -1
        ).map(item => {
            const products = `
            <div id="productCard" class="card product text-dark animate__animated animate__bounce" style="width: 11rem;">
                <img   class="card-img-top" height="125px" src="http://localhost:3000/previews/${item.imagen}" alt="Card image cap">
                <div onClick='saveProductToOrden(${item.productoId});' class="card-body text-center"  >
                    <p class="card-text"><strong>${item.producto.toUpperCase()}(${item.desc})</strong></p>
                    <p class="card-text"><strong><span class="badge badge-info">$${item.precio}</span></strong></p>
                </div>
            </div>               
                `;
            content.insertAdjacentHTML('beforeEnd', products);
        })
    }

    const productsByCategory = async () => {
        let response = await new GetInfoByFetch(links.urlCategory).request();
        document.getElementById('container-productos').innerHTML = " ";
        document.getElementById('container-list-product').innerHTML = " ";

        response.map((category) => {
            const categoria = `
            <div id="${category.categoriaId}" onclick="getProductsByCategory(${category.categoriaId})" class="animate__animated animate__bounce text-warning  col-sm-2 card-category border border-warning">
                <p class="text-category" >${category.categoria.toUpperCase()}</p>
                
            </div>`;
            document.getElementById('container-productos').insertAdjacentHTML('beforeEnd', categoria);

        })
    };

    let selectedCat = null;

    const getProductsByCategory = async (id) => {
        const content = document.getElementById('container-list-product');
        let response = await new GetInfoByFetch(`${links.products}productosBycategori/${id}`).request();
        //HACE EL FOCUS AL HACER CLICK A UNA TARGETA DE CATEGORIAS
        if (selectedCat === null) {
            $(`#${id}`).addClass("selected");
            selectedCat = id
        } else {
            $(`#${selectedCat}`).removeClass("selected")
            $(`#${id}`).addClass("selected")
            selectedCat = id
        }
        if (response.length > 0) {
            content.innerHTML = " ";
            response.map((productos) => {
                const products = `
            <div id="productCard" class="card product text-dark animate__animated animate__bounce" style="width: 11rem;">
                <img   class="card-img-top" height="125px" src="http://localhost:3000/previews/${productos.imagen}" alt="Card image cap">
                <div onClick='saveProductToOrden(${productos.productoId});' class="card-body text-center"  >
                    <p class="card-text"><strong>${productos.producto.toUpperCase()}(${productos.desc})</strong></p>
                    <p class="card-text"><span class="badge badge-info">$${productos.precio}</span></p>
                </div>
            </div>               
                `;
                content.insertAdjacentHTML('beforeEnd', products);

            });
            //alertify.success("Producto agregado con exito!");
        } else {
            content.innerHTML = "SIN PRODUCTOS"
        }
    }

    const allProducts = async () => {
        const content = document.getElementById('container-productos');
        document.getElementById('container-list-product').innerHTML = " ";
        let response = await new GetInfoByFetch(`${links.products}`).request();

        if (response.length > 0) {
            content.innerHTML = " ";

            response.map((productos) => {
                const products = `
            <div id="productCard" class="card product text-dark animate__animated animate__bounce" style="width: 11rem;">
                <img   class="card-img-top" height="125px" src="http://localhost:3000/previews/${productos.imagen}" alt="Card image cap">
                <div onClick='saveProductToOrden(${productos.productoId});' class="card-body"  >
                    <p class="card-text"><strong>${productos.producto.toUpperCase()}(${productos.desc})</strong></p>
                    <p class="card-text"><span class="badge badge-info">$${productos.precio}</span></p>
                </div>
      
            </div>               
                `;
                content.insertAdjacentHTML('beforeEnd', products);

            });
            //alertify.success("Producto agregado con exito!");
            return listProducts = response;

        } else {
            content.innerHTML = "SIN PRODUCTOS"
        }

    }
</script>